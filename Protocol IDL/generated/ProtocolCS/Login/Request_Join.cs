// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ProtocolCS.Login
{

using global::System;
using global::FlatBuffers;

public struct Request_Join : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Request_Join GetRootAsRequest_Join(ByteBuffer _bb) { return GetRootAsRequest_Join(_bb, new Request_Join()); }
  public static Request_Join GetRootAsRequest_Join(ByteBuffer _bb, Request_Join obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Request_Join __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string UserName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetUserNameBytes() { return __p.__vector_as_arraysegment(4); }
  public string Password { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetPasswordBytes() { return __p.__vector_as_arraysegment(6); }

  public static Offset<Request_Join> CreateRequest_Join(FlatBufferBuilder builder,
      StringOffset user_nameOffset = default(StringOffset),
      StringOffset passwordOffset = default(StringOffset)) {
    builder.StartObject(2);
    Request_Join.AddPassword(builder, passwordOffset);
    Request_Join.AddUserName(builder, user_nameOffset);
    return Request_Join.EndRequest_Join(builder);
  }

  public static void StartRequest_Join(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddUserName(FlatBufferBuilder builder, StringOffset userNameOffset) { builder.AddOffset(0, userNameOffset.Value, 0); }
  public static void AddPassword(FlatBufferBuilder builder, StringOffset passwordOffset) { builder.AddOffset(1, passwordOffset.Value, 0); }
  public static Offset<Request_Join> EndRequest_Join(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Request_Join>(o);
  }
};


}
