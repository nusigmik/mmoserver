// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ProtocolCS.World
{

using global::System;
using global::FlatBuffers;

public struct Request_ActionSkill : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Request_ActionSkill GetRootAsRequest_ActionSkill(ByteBuffer _bb) { return GetRootAsRequest_ActionSkill(_bb, new Request_ActionSkill()); }
  public static Request_ActionSkill GetRootAsRequest_ActionSkill(ByteBuffer _bb, Request_ActionSkill obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Request_ActionSkill __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Skill { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool MutateSkill(int skill) { int o = __p.__offset(4); if (o != 0) { __p.bb.PutInt(o + __p.bb_pos, skill); return true; } else { return false; } }
  public string Targets(int j) { int o = __p.__offset(6); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int TargetsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public float Rotation { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public bool MutateRotation(float rotation) { int o = __p.__offset(8); if (o != 0) { __p.bb.PutFloat(o + __p.bb_pos, rotation); return true; } else { return false; } }

  public static Offset<Request_ActionSkill> CreateRequest_ActionSkill(FlatBufferBuilder builder,
      int skill = 0,
      VectorOffset targetsOffset = default(VectorOffset),
      float rotation = 0.0f) {
    builder.StartObject(3);
    Request_ActionSkill.AddRotation(builder, rotation);
    Request_ActionSkill.AddTargets(builder, targetsOffset);
    Request_ActionSkill.AddSkill(builder, skill);
    return Request_ActionSkill.EndRequest_ActionSkill(builder);
  }

  public static void StartRequest_ActionSkill(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddSkill(FlatBufferBuilder builder, int skill) { builder.AddInt(0, skill, 0); }
  public static void AddTargets(FlatBufferBuilder builder, VectorOffset targetsOffset) { builder.AddOffset(1, targetsOffset.Value, 0); }
  public static VectorOffset CreateTargetsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static void StartTargetsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRotation(FlatBufferBuilder builder, float rotation) { builder.AddFloat(2, rotation, 0.0f); }
  public static Offset<Request_ActionSkill> EndRequest_ActionSkill(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Request_ActionSkill>(o);
  }
};


}
