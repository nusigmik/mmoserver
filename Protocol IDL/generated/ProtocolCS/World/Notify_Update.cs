// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ProtocolCS.World
{

using global::System;
using global::FlatBuffers;

public struct Notify_Update : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Notify_Update GetRootAsNotify_Update(ByteBuffer _bb) { return GetRootAsNotify_Update(_bb, new Notify_Update()); }
  public static Notify_Update GetRootAsNotify_Update(ByteBuffer _bb, Notify_Update obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Notify_Update __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string EntityId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetEntityIdBytes() { return __p.__vector_as_arraysegment(4); }
  public UpdateType UpdateDataType { get { int o = __p.__offset(6); return o != 0 ? (UpdateType)__p.bb.Get(o + __p.bb_pos) : UpdateType.NONE; } }
  public bool MutateUpdateDataType(UpdateType update_data_type) { int o = __p.__offset(6); if (o != 0) { __p.bb.Put(o + __p.bb_pos, (byte)update_data_type); return true; } else { return false; } }
  public TTable? UpdateData<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o) : null; }

  public static Offset<Notify_Update> CreateNotify_Update(FlatBufferBuilder builder,
      StringOffset entity_idOffset = default(StringOffset),
      UpdateType update_data_type = UpdateType.NONE,
      int update_dataOffset = 0) {
    builder.StartObject(3);
    Notify_Update.AddUpdateData(builder, update_dataOffset);
    Notify_Update.AddEntityId(builder, entity_idOffset);
    Notify_Update.AddUpdateDataType(builder, update_data_type);
    return Notify_Update.EndNotify_Update(builder);
  }

  public static void StartNotify_Update(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddEntityId(FlatBufferBuilder builder, StringOffset entityIdOffset) { builder.AddOffset(0, entityIdOffset.Value, 0); }
  public static void AddUpdateDataType(FlatBufferBuilder builder, UpdateType updateDataType) { builder.AddByte(1, (byte)updateDataType, 0); }
  public static void AddUpdateData(FlatBufferBuilder builder, int updateDataOffset) { builder.AddOffset(2, updateDataOffset, 0); }
  public static Offset<Notify_Update> EndNotify_Update(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Notify_Update>(o);
  }
};


}
